var documenterSearchIndex = {"docs":
[{"location":"man/examples/example/#Regime-switching-Phillips-curve","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"","category":"section"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"One of the most popular macroeconomic relationships is the trade-off between inflation and unemployment. The so-called Phillips curve is discussed in both introductory macroeconomics courses and at the meetings of the most influential central banks. The curve introduced a stylized fact that the inflation falls during recessions and rises during booms.","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"However, many policymakers and academic economists have argued that the historical relationship has changed over time. The 'flattening' of the Phillips curve poses a challenge for policymakers, as it can imply that countercyclical policy may not be effective in steering inflation toward the established central bank's target.","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"To investigate the time-varying nature of the Phillips curve, we will estimate a Markov switching model.","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"First we would need a dataset with quarterly inflation and unemployment. We will use the data from the Federal Reserve Bank of St. Louis (FRED) database. The data is available in the repository of the package. It's already transformed into log differences.","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"using MarSwitching\nusing DataFrames\nusing CSV\nusing Plots\nusing Random\nusing Dates\n\nphilips_csv_path = joinpath(\n    dirname(pathof(MarSwitching)),\n    \"../docs/src/man/examples/my_assets/philips.csv\"\n)\ndf = CSV.read(philips_csv_path, DataFrame, missingstring = \"NA\")\n\nmodel_df = dropmissing(select(df, [:cpi, :unemp,  :infexp, :s_shock]))  ","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"Let's see how the relationship looks like in the raw data:","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"using Plots\n\nplot_df = filter(x -> x.cpi .> -2, model_df) # remove outliers\n\nphil_plot = plot(plot_df.unemp, plot_df.cpi,\n                seriestype=:scatter, legend = :none,\n                title = \"Phillips curve\",\n                xlabel = \"Unemployment rate gap\", ylabel = \"CPI change\")","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"(Image: Plot)","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"Overall, the relationship is far from being clear. The slope of plotted data is just slightly negative. At least for these ","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"x = [ones(size(model_df)[1]) model_df.unemp]\n(x'x)^(-1)*(x'model_df.cpi)","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"2-element Vector{Float64}:\n  0.926584897227734\n -0.0024658207247481023","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"However, as is often the case, simply plotting scatter plots falls short when trying to find evidence of more complex phenomena. ","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"Now, how can theory guide our model specification? The developments in New Keynesian economic theory, provides a model where: ","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"Inflation is sticky, i.e. it does not adjust immediately to changes in the economy. This might be because of the rigid contracts between firms and workers, or because of the inertia in the price setting process.\nInflation expectations matter. The economic agents keep in mind the inflation target of the central bank or the past inflation when setting prices.","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"Both of the reasons above suggests the use of another variable, something that can control for past inflation and inflation expectations. We will use the moving average of past 4 quarters of inflation. Although obvious from purely econometric point of view, addition of this variable is well grounded in theory. ","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"3-element Vector{Float64}:\n  0.6142244973354851\n -0.07542670572276094\n  0.2057396961885335","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"Indeed, once we add the inflation expectations, the slope of the New Keynesian Phillips curve becomes slightly more negative. It is still far from what we would expect from the theory, but it is a step in the right direction.","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"Now, in order to check the time-varying nature of the Phillips curve, or the so-called \"flattening\" of thereof, we will estimate a Markov switching model. The set of variables will also be extended to include a proxy for the supply shock, which will be a difference between core and headline inflation. This variable might be relevant as we might expect some changes in e.g. prices of commodities on global market to have a material impact on the inflation. At the same time being unrelated to the domestic economic conditions and the phenomena we would like to describe. We don't expect the effect of supply shock to differ across regimes, so we will not include it in the list of variables that are regime-specific.","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"Random.seed!(0)\nmodel = MSModel(model_df.cpi, 2, \n                exog_switching_vars = [model_df.unemp model_df.infexp],\n                exog_vars =  model_df.s_shock)\n\nsummary_msm(model)","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"Markov Switching Model with 2 regimes\n=================================================================\n# of observations:          259 AIC:                       108.149\n# of estimated parameters:   11 BIC:                       147.274\nError distribution:    Gaussian Instant. adj. R^2:          0.7311\nLoglikelihood:            -43.1 Step-ahead adj. R^2:        0.7308\n-----------------------------------------------------------------\n------------------------------\nSummary of regime 1:\n------------------------------\nCoefficient  |  Estimate  |  Std. Error  |  z value  |  Pr(>|z|)\n-------------------------------------------------------------------\nβ_0          |     1.092  |       0.191  |    5.724  |    < 1e-3  \nβ_1          |    -0.129  |        0.03  |   -4.261  |    < 1e-3  \nβ_2          |     0.207  |       0.019  |    10.89  |    < 1e-3\nβ_3          |     0.232  |       0.008  |   28.674  |    < 1e-3\nσ            |     0.505  |       0.025  |   20.303  |    < 1e-3\n-------------------------------------------------------------------\nExpected regime duration: 18.28 periods\n-------------------------------------------------------------------\n------------------------------\nSummary of regime 2:\n------------------------------\nCoefficient  |  Estimate  |  Std. Error  |  z value  |  Pr(>|z|)\n-------------------------------------------------------------------\nβ_0          |     0.337  |       0.065  |    5.223  |    < 1e-3  \nβ_1          |    -0.009  |       0.009  |   -0.987  |     0.324  \nβ_2          |     0.111  |       0.012  |    9.531  |    < 1e-3\nβ_3          |     0.232  |       0.008  |   28.674  |    < 1e-3\nσ            |     0.151  |       0.012  |   12.384  |    < 1e-3\n-------------------------------------------------------------------\nExpected regime duration: 27.25 periods\n-------------------------------------------------------------------\nleft-stochastic transition matrix:\n          | regime 1   | regime 2\n---------------------------------------\n regime 1 |   94.528%  |    3.669%  |\n regime 2 |    5.472%  |   96.331%  |","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"The model shows that there are 2 regimes of the cyclical relationship. The second regime is characterized by significantly negative slope of the Phillips curve. This is a regime, which should allow policy-makers to have some influence on the inflation. The second regime is characterized by a very flat Phillips curve, as the coefficient for unemployment is not significantly different from zero. The inflation during this regime is also substantially less volatile than otherwise. ","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"Unfortunately for policy-makers, the average duration of the favorable regime is ~18 quarters, while the flat Phillips curve is the dominant regime with the average duration of ~27 quarters.","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"plot(df.date[9:end], \n    [filtered_probs(model)[:,1] filtered_probs(model)[:,2]],\n    xticks = (Date.(minimum(year.(df.date)):4:maximum(year.(df.date))),minimum(year.(df.date)):4:maximum(year.(df.date))),\n    xrotation= 45,\n    label     = [\"Steep Phillips curve\" \"Flat Phillips curve\"],\n    linewidth = 2,\n    legend = :bottomleft)","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"(Image: Plot)","category":"page"},{"location":"man/examples/example/","page":"Regime switching Phillips curve","title":"Regime switching Phillips curve","text":"The plot above shows the probability of being in particular regime. The model confirms some of the concerns among economists regarding the \"flattening\" of the Phillips curve. Indeed, the period when Phillips curve behave as expected by the theory has changed at the beginning of 1990. Since then, the ability of policymakers to influence the inflation has been substantially reduced. ","category":"page"},{"location":"man/my_assets/get_started/#Getting-started","page":"Getting started","title":"Getting started","text":"","category":"section"},{"location":"man/my_assets/get_started/","page":"Getting started","title":"Getting started","text":"Following example will estimate a simple Markov switching model with regime dependent intercept, exogenous variable and variance. The model is defined as follows:","category":"page"},{"location":"man/my_assets/get_started/","page":"Getting started","title":"Getting started","text":"beginalign*\n    y_t = mu_s + beta_s x_t + epsilon_t  epsilon sim mathbbN(0mathcalSigma_s) \nendalign*","category":"page"},{"location":"man/my_assets/get_started/","page":"Getting started","title":"Getting started","text":"beginequation*\n    P(S_t = i  S_t-1 = j) = beginbmatrix\n        p_1  1 - p_2\n        1 - p_1  p_2\n        endbmatrix\nendequation*","category":"page"},{"location":"man/my_assets/get_started/","page":"Getting started","title":"Getting started","text":"using MarSwitching\nusing Random\nusing Statistics\n\nk = 2            # number of regimes\nT = 400          # number of generated observations\nμ = [1.0, -0.5]  # regime-switching intercepts\nβ = [-1.5, 0.0]  # regime-switching coefficient for β\nσ = [1.1,  0.8]  # regime-switching standard deviation\nP = [0.9 0.05    # transition matrix (left-stochastic)\n     0.1 0.95]\n\nRandom.seed!(123)\n\n# generate artificial data with given parameters\ny, s_t, X = generate_msm(μ, σ, P, T, β = β) \n\n# estimate the model\nmodel = MSModel(y, k, intercept = \"switching\", exog_switching_vars = X[:,2])\n\n# we may simulated data also from estimated model\n# e.g. for calculating VaR:\nquantile(generate_msm(model, 1000)[1], 0.05)\n\n# or more interestingly, output summary table\nsummary_msm(model)","category":"page"},{"location":"man/my_assets/get_started/","page":"Getting started","title":"Getting started","text":"The estimated model has a following form:","category":"page"},{"location":"man/my_assets/get_started/","page":"Getting started","title":"Getting started","text":"y_t = \nbegincases\n    082 - 148 times x_t + epsilon_1t  epsilon_1 sim mathbbN(0112)  textfor  S_t = 1\n    -051 - 0003 times x_t + epsilon_2t  epsilon_2 sim mathbbN(0084)  textfor  S_t = 2\nendcases","category":"page"},{"location":"man/my_assets/get_started/","page":"Getting started","title":"Getting started","text":"beginequation*\n    P(S_t = i  S_t-1 = j) = beginbmatrix\n        9118  35 \n        882  965\n        endbmatrix\nendequation*","category":"page"},{"location":"man/my_assets/get_started/","page":"Getting started","title":"Getting started","text":"The package also provides a functions for filtered transition probabilites P(S_t = i  Psi_t), as well as smoothed ones P(S_t = i  Psi_T). Essentially, the difference is that in order to calculate the smoothed probabilites the whole sample is used.","category":"page"},{"location":"man/my_assets/get_started/","page":"Getting started","title":"Getting started","text":"using Plots\n\nplot(filtered_probs(model),\n     label     = [\"Regime 1\" \"Regime 2\"],\n     title     = \"Regime probabilities\", \n     linewidth = 2)","category":"page"},{"location":"man/my_assets/get_started/","page":"Getting started","title":"Getting started","text":"(Image: Plot)","category":"page"},{"location":"man/my_assets/get_started/","page":"Getting started","title":"Getting started","text":"using Plots\n\nplot(smoothed_probs(model),\n     label     = [\"Regime 1\" \"Regime 2\"],\n     title     = \"Smoothed regime probabilities\", \n     linewidth = 2)","category":"page"},{"location":"man/my_assets/get_started/","page":"Getting started","title":"Getting started","text":"(Image: Plot)","category":"page"},{"location":"man/docstrings/#Docstrings","page":"API","title":"Docstrings","text":"","category":"section"},{"location":"man/docstrings/","page":"API","title":"API","text":"tip: You may also use help mode `?`\nYou can access the docstring of every function listed here by typing ? in Julia's REPL followed by the function name. For example, ?MSModel will show the docstring for the MSModel function.","category":"page"},{"location":"man/docstrings/","page":"API","title":"API","text":"MarSwitching.jl exports following list of functions (and a struct):","category":"page"},{"location":"man/docstrings/","page":"API","title":"API","text":"","category":"page"},{"location":"man/docstrings/#Model-estimation","page":"API","title":"Model estimation","text":"","category":"section"},{"location":"man/docstrings/","page":"API","title":"API","text":"MarSwitching.MSM\nMarSwitching.MSModel\nMarSwitching.grid_search_msm","category":"page"},{"location":"man/docstrings/#MarSwitching.MSM","page":"API","title":"MarSwitching.MSM","text":"Struct MSM holds the parameters of the model, data and some other information. Is returned by the function MSModel.\n\n\n\n\n\n","category":"type"},{"location":"man/docstrings/#MarSwitching.MSModel","page":"API","title":"MarSwitching.MSModel","text":"MSModel(y::VecOrMat{V},\n        k::Int64, \n        ;intercept::String = \"switching\",\n        exog_vars::VecOrMat{V},\n        exog_switching_vars::VecOrMat{V},\n        switching_var::Bool = true,\n        exog_tvtp::VecOrMat{V},\n        x0::Vector{V},\n        algorithm::Symbol = :LN_SBPLX,\n        maxtime::Int64 = -1,\n        random_search::Int64 = 0,\n        random_search_em::Int64,\n        verbose::Bool) where V <: AbstractFloat\n\nFunction to estimate the Markov Switching Model. Returns an instance of MSM struct.\n\nNote: The model likelihood function is very nonlinear and prone to local maxima. Increasing number of random searches can help, for the cost of longer training time. For the same reason, it is recommended not to estimate model with many states (e.g. more than 5), altough it is possible.\n\nArguments\n\ny::VecOrMat{V}: dependent variable.\nk::Int64: number of states.\nintercept::String: \"switching\" or \"non-switching\" or \"no\".\nexog_vars::VecOrMat{V}: optional exogenous variables for the non-switching part of the model.\nexog_switching_vars::VecOrMat{V}: optional exogenous variables for the switching part of the model.\nswitching_var::Bool: is variance state dependent?\nexog_tvtp::VecOrMat{V}: optional exogenous variables for the tvtp part of the model.\nx0::Vector{V}: initial guess for the parameters. If empty, the initial guess is generated from k-means clustering.\nalgorithm::Symbol: optimization algorithm to use. One of [:LD_VAR2, :LD_VAR1, :LD_LBFGS, :LN_SBPLX]\nmaxtime::Int64: maximum time in seconds to run the optimization. If negative, the maximum time is equal T/2.\nrandom_search_em::Int64: number of random searches to perform for the EM algorithm. If 0, no random search is performed.\nrandom_search::Int64: number of random searches to perform. \nverbose::Bool: if true, prints out the progress of the random searches.\n\nReferences:\n\nHamilton, J. D. (1989). A new approach to the economic analysis of nonstationary time series and the business cycle. Econometrica: Journal of the Econometric Society, 357-384.\nFilardo, Andrew J. (1994). Business cycle phases and their transitional dynamics. Journal of Business & Economic Statistics, 12(3), 299-308.\n\nSee also grid_search_msm.\n\n\n\n\n\n","category":"function"},{"location":"man/docstrings/#MarSwitching.grid_search_msm","page":"API","title":"MarSwitching.grid_search_msm","text":"grid_search_msm(y::VecOrMat{V}, \n                x::VecOrMat{V},\n                criterion::String = \"AIC\";\n                k::Vector{Int64} = [2,3,4],\n                intercept::Vector{String} = [\"switching\", \"non-switching\"],\n                vars::Vector{Vector{String}},\n                switching_var::Vector{Bool} = [true, false],\n                random_n::Int64,\n                random_search_em::Int64 = 0,\n                random_search::Int64 = 0,\n                verbose::Bool = true,\n                algorithm::Symbol = :LN_SBPLX,\n                maxtime::Int64 = -1) where V <: AbstractFloat\n\nFunction for exhaustive or random search over specified parameter values for a Markov switching model (currently non-TVTP).\n\nReturns a selected MSM model, vector of criterion values and a vector of tuples containing parameter space.\n\nNote: Unless the data is of small size (both dimensions), it is best to limit the parameter space by providing smaller possible parameters or by chosing random number of parameters to evaluate.\n\nArguments\n\ny::VecOrMat{V}: dependent variable.\nx::VecOrMat{V}: independent variables.\ncriterion::String: criterion to use for model selection. One of \"AIC\" (default) or \"BIC\".\nk::Int64: vector of states to evaluate.\nintercept::String: vector of \"switching\", \"non-switching\" or \"no\".\nvars::Vector{Vector{String}}: vector of vectors with either \"switching\" or \"non-switching\" for corresponding variables in x argument.\nswitching_var::Vector{Bool}: vector of booleans for variance state dependency.\nswitching_var::Bool: is variance state dependent?\nrandom_n::Int64: number of random parameters combinations to evaluate. If negative, performs an exhaustive grid search.\nrandom_search_em::Int64: number of random searches to perform for the EM algorithm in eery model estimation. If 0, no random search is performed.\nrandom_search::Int64: number of random searches to perform. \nalgorithm::Symbol: optimization algorithm to use. One of [:LDVAR2, :LDVAR1, :LDLBFGS, :LNSBPLX]\nmaxtime::Int64: maximum time in seconds to run the optimization. If negative, the maximum time is equal T/2.\nverbose::Bool: if true, prints out the progress of the grid/random search.\n\nSee also MSModel.\n\n\n\n\n\n","category":"function"},{"location":"man/docstrings/#Simulation","page":"API","title":"Simulation","text":"","category":"section"},{"location":"man/docstrings/","page":"API","title":"API","text":"MarSwitching.generate_msm(model::MSM, T::Int64 = 0)\nMarSwitching.generate_msm(μ::Vector{V},\n                        σ::Vector{V},\n                        P::Matrix{V},\n                        T::Int64;\n                        β::Vector{V} = Vector{V}([]),\n                        β_ns::Vector{V} = Vector{V}([]),\n                        δ::Vector{V} = Vector{V}([]),\n                        tvtp_intercept::Bool = true) where V <: AbstractFloat","category":"page"},{"location":"man/docstrings/#MarSwitching.generate_msm","page":"API","title":"MarSwitching.generate_msm","text":"generate_msm(model::MSM, T::Int64)\n\nWhen applied to estimated model, generates artificial data of size T from the model.\n\n\n\n\n\n","category":"function"},{"location":"man/docstrings/#MarSwitching.generate_msm-Union{Tuple{V}, Tuple{Vector{V}, Vector{V}, Matrix{V}, Int64}} where V<:AbstractFloat","page":"API","title":"MarSwitching.generate_msm","text":"generate_msm(μ::Vector{Float64}, σ::Vector{Float64}, P::Matrix{Float64}, T::Int64; <keyword arguments>)\n\nGenerate artificial data from Markov switching model from provided parameters. Returns a tuple of (y, s_t, X) where y is the generated data, s_t is the state sequence and X is the design matrix.\n\nNote, in order to have non-switching parameter provide it k-times.\n\nArguments\n\nμ::Vector{AbstractFloat}: intercepts for each state.\nσ::Vector{AbstractFloat}: standard deviations for each state.\nP::Matrix{AbstractFloat}: transition matrix.\nT::Int64: number of observations to generate.\nβ::Vector{AbstractFloat}: switching coefficients. (first k elements in vector are coefficeints of the first state equation).\nβ_ns::Vector{AbstractFloat}: non-switching coefficients.\nδ::Vector{AbstractFloat}: tvtp coefficients.\ntvtp_intercept::Bool: whether to include an intercept in the tvtp model.\n\n\n\n\n\n","category":"method"},{"location":"man/docstrings/#Model-summary","page":"API","title":"Model summary","text":"","category":"section"},{"location":"man/docstrings/","page":"API","title":"API","text":"MarSwitching.summary_msm\nMarSwitching.transition_mat\nMarSwitching.state_coeftable\nMarSwitching.coeftable_tvtp\nMarSwitching.get_std_errors","category":"page"},{"location":"man/docstrings/#MarSwitching.summary_msm","page":"API","title":"MarSwitching.summary_msm","text":"summary_msm(model::MSM; digits::Int64=3)\n\nReturns formated summary table of estimated model. It's built from summary_msm, state_coeftable and coeftable_tvtp functions.\n\n\n\n\n\n","category":"function"},{"location":"man/docstrings/#MarSwitching.transition_mat","page":"API","title":"MarSwitching.transition_mat","text":"transition_mat(model::MSM; digits::Int64=2)\n\nReturns formated table of estimated transition matrix probabilities. It's one of the functions called by the summary_msm function.\n\nSee also summary_msm, state_coeftable, coeftable_tvtp.\n\n\n\n\n\n","category":"function"},{"location":"man/docstrings/#MarSwitching.state_coeftable","page":"API","title":"MarSwitching.state_coeftable","text":"state_coeftable(model::MSM, state::Int64; digits::Int64=3)\n\nReturns formated table of coefficients and their statistics for a given state.     It's one of the functions called by the summary_msm function.\n\nSee also summary_msm, coeftable_tvtp, transition_mat.\n\n\n\n\n\n","category":"function"},{"location":"man/docstrings/#MarSwitching.coeftable_tvtp","page":"API","title":"MarSwitching.coeftable_tvtp","text":"coeftable_tvtp(model::MSM; digits::Int64=3)\n\nReturns formated table of estimated coefficients from TVTP model and their statistics. It's one of the functions called by the summary_msm function.\n\nSee also summary_msm, state_coeftable, transition_mat.\n\n\n\n\n\n","category":"function"},{"location":"man/docstrings/#MarSwitching.get_std_errors","page":"API","title":"MarSwitching.get_std_errors","text":"get_std_errors(model::MSM)\n\nReturns standard errors of the estimated parameters.  The errors are calculated with finite difference hessian od the log-likelihood function.\n\nThe output is a vector of standard errors in order given by raw_params field of the model.\n\nThe formula is squared diagonal values of the inverse (moore-penrose) of the hessian matrix:\n\n(-fracpartial^2 mathcalL(mathbftheta)partial mathbftheta mathbftheta)^-1\n\n\n\n\n\n","category":"function"},{"location":"man/docstrings/#Model-inference","page":"API","title":"Model inference","text":"","category":"section"},{"location":"man/docstrings/","page":"API","title":"API","text":"MarSwitching.filtered_probs\nMarSwitching.smoothed_probs\nMarSwitching.predict\nMarSwitching.expected_duration\nMarSwitching.ergodic_probs","category":"page"},{"location":"man/docstrings/#MarSwitching.filtered_probs","page":"API","title":"MarSwitching.filtered_probs","text":"filtered_probs(model::MSM; kwargs...)\n\nReturns filtered probabilities of each state at each time period. If only model is provided, in-sample data is used.\n\nFiltered probabilites, unlike smoothed probabilites, are calculated using data available up to time T.\n\nArguments\n\nmodel::MSM: estimated model.\ny: optional data for dependent variabla.\nexog_vars: optional exogenous variables for the non-switching part of the model.\nexog_switching_vars: optional exogenous variables for the switching part of the model.\nexog_tvtp: optional exogenous variables for the tvtp part of the model.\n\nSee also smoothed_probs and expected_duration.\n\n\n\n\n\n","category":"function"},{"location":"man/docstrings/#MarSwitching.smoothed_probs","page":"API","title":"MarSwitching.smoothed_probs","text":"smoothed_probs(model::MSM; kwargs...)\n\nReturns smoothed probabilities of each state at each time period (Kim, 1994). If only MSM model is provided, in-sample data is used.\n\nSmoothed probabilites, unlike filtered probabilites, are calculated using all available data.\n\nArguments\n\nmodel::MSM: estimated model.\ny: optional data for dependent variabla.\nexog_vars: optional exogenous variables for the non-switching part of the model.\nexog_switching_vars: optional exogenous variables for the switching part of the model.\nexog_tvtp: optional exogenous variables for the tvtp part of the model.\n\nSee also filtered_probs and expected_duration.\n\nReferences\n\nKim, Chang Jin (1994). Dynamic Linear Models with Markov-Switching. Journal of Econometrics 60, 1-22.\n\n\n\n\n\n","category":"function"},{"location":"man/docstrings/#MarSwitching.predict","page":"API","title":"MarSwitching.predict","text":"predict(model::MSM, instantaneous::Bool = false; kwargs...)\n\nProvide either instantaneous or one-step-ahead prediction of the dependent variable.    \n\nWhich is the probability weighted average of predictions of each state equation:\n\nhaty_t = sum_i=1^k hatxi_itX_thatbeta_i\n\nAnd for one step ahead, the state probabilities have to be predicted themselves:\n\nhaty_t+1 = sum_i=1^k (Phatxi_it)X_t+1hatbeta_i\n\nIf only MSM model is provided, in-sample data is used.\n\nReturns a tuple of (ŷ, ξ_t) where ŷ is the predicted value of the dependent variable and ξ_t is the filtered probabilities of each state at each time period.\n\nArguments\n\nmodel::MSM: estimated model.\ny: optional data for dependent variabla.\nexog_vars: optional exogenous variables for the non-switching part of the model.\nexog_switching_vars: optional exogenous variables for the switching part of the model.\nexog_tvtp: optional exogenous variables for the tvtp part of the model.\n\n\n\n\n\n","category":"function"},{"location":"man/docstrings/#MarSwitching.expected_duration","page":"API","title":"MarSwitching.expected_duration","text":"expected_duration(model::MSM, exog_tvtp::VecOrMat{AbstractFloat})\n\nFor non-TVTP model, returns Vector of expected duration of each state. For TVTP model, returns a matrix of expected duration of each state at timt t.    \n\nformula: 1 / (1 - P[i,i]) or for TVTP - 1 / (1 - P[i,i, t])\n\nArguments\n\nmodel::MSM: estimated model.\nexog_tvtp::VecOrMat{AbstractFloat}: optional exogenous variables for the tvtp model. If not provided, in-sample data is used.\n\nSee also ergodic_probs.\n\n\n\n\n\n","category":"function"},{"location":"man/docstrings/#MarSwitching.ergodic_probs","page":"API","title":"MarSwitching.ergodic_probs","text":"ergodic_probs(P::Matrix{Float64})\n\nReturns a k-size Vector of ergodic probabilites of each state.     \n\nThe ergodic probabilites (also known as long-term probabilites) of a Markov process are the probabilites that satisfy the following equation:\n\nlim_ntoinfty P^n = pi = P pi \n\nThe ergodic probability is proportional to the eigenvector of the transition matrix P associated to the unit eigenvalue.\n\nArguments\n\nP::Matrix{Float64}: left stochastic transition matrix.\n\nSee also expected_duration.\n\n\n\n\n\nergodic_probs(model::MSM, exog_tvtp::VecOrMat{V})\n\nwhen applied to the non-TVTP model, returns a k-size Vector of ergodic probabilites of each state.      For TVTP model, returns T times K a matrix of ergodic probabilites of each state at time t.\n\nArguments\n\nmodel::MSM: estimated model.\nexog_tvtp::VecOrMat{AbstractFloat}: optional exogenous variables for the tvtp model. If not provided, in-sample data is used.\n\nSee also expected_duration.\n\n\n\n\n\n","category":"function"},{"location":"man/docstrings/#Other","page":"API","title":"Other","text":"","category":"section"},{"location":"man/docstrings/","page":"API","title":"API","text":"MarSwitching.add_lags","category":"page"},{"location":"man/docstrings/#MarSwitching.add_lags","page":"API","title":"MarSwitching.add_lags","text":"add_lags(y::Vector{Float64}, p::Int64)\n\nGiven a vector y of length T, returns a matrix of size (T-p) x (p+1) where the first column is y[p+1:T], second column is y[p:T-1] and so on.    \n\n\n\n\n\n","category":"function"},{"location":"man/get_started/#Getting-started","page":"Getting started","title":"Getting started","text":"","category":"section"},{"location":"man/get_started/","page":"Getting started","title":"Getting started","text":"Following example will estimate a simple Markov switching model with regime dependent intercept, exogenous variable and variance. The model is defined as follows:","category":"page"},{"location":"man/get_started/","page":"Getting started","title":"Getting started","text":"beginalign*\n    y_t = mu_s + beta_s x_t + epsilon_t  epsilon sim mathbbN(0mathcalSigma_s) \nendalign*","category":"page"},{"location":"man/get_started/","page":"Getting started","title":"Getting started","text":"beginequation*\n    P(S_t = i  S_t-1 = j) = beginbmatrix\n        p_1  1 - p_2\n        1 - p_1  p_2\n        endbmatrix\nendequation*","category":"page"},{"location":"man/get_started/","page":"Getting started","title":"Getting started","text":"using MarSwitching\nusing Random\nusing Statistics\n\nk = 2            # number of regimes\nT = 400          # number of generated observations\nμ = [1.0, -0.5]  # regime-switching intercepts\nβ = [-1.5, 0.0]  # regime-switching coefficient for β\nσ = [1.1,  0.8]  # regime-switching standard deviation\nP = [0.9 0.05    # transition matrix (left-stochastic)\n     0.1 0.95]\n\nRandom.seed!(123)\n\n# generate artificial data with given parameters\ny, s_t, X = generate_msm(μ, σ, P, T, β = β) \n\n# estimate the model\nmodel = MSModel(y, k, intercept = \"switching\", exog_switching_vars = X[:,2])\n\n# we may simulated data also from estimated model\n# e.g. for calculating VaR:\nquantile(generate_msm(model, 1000)[1], 0.05)\n\n# or more interestingly, output summary table\nsummary_msm(model)","category":"page"},{"location":"man/get_started/","page":"Getting started","title":"Getting started","text":"The estimated model has a following form:","category":"page"},{"location":"man/get_started/","page":"Getting started","title":"Getting started","text":"y_t = \nbegincases\n    082 - 148 times x_t + epsilon_1t  epsilon_1 sim mathbbN(0112)  textfor  S_t = 1\n    -051 - 0003 times x_t + epsilon_2t  epsilon_2 sim mathbbN(0084)  textfor  S_t = 2\nendcases","category":"page"},{"location":"man/get_started/","page":"Getting started","title":"Getting started","text":"beginequation*\n    P(S_t = i  S_t-1 = j) = beginbmatrix\n        9118  35 \n        882  965\n        endbmatrix\nendequation*","category":"page"},{"location":"man/get_started/","page":"Getting started","title":"Getting started","text":"The package also provides functions for filtered transition probabilities P(S_t = i  Psi_t), as well as smoothed ones P(S_t = i  Psi_T). Essentially, the difference is that in order to calculate the smoothed probabilities the whole sample is used.","category":"page"},{"location":"man/get_started/","page":"Getting started","title":"Getting started","text":"using Plots\n\nplot(filtered_probs(model),\n     label     = [\"Regime 1\" \"Regime 2\"],\n     title     = \"Regime probabilities\", \n     linewidth = 2)","category":"page"},{"location":"man/get_started/","page":"Getting started","title":"Getting started","text":"(Image: Plot)","category":"page"},{"location":"man/get_started/","page":"Getting started","title":"Getting started","text":"using Plots\n\nplot(smoothed_probs(model),\n     label     = [\"Regime 1\" \"Regime 2\"],\n     title     = \"Smoothed regime probabilities\", \n     linewidth = 2)","category":"page"},{"location":"man/get_started/","page":"Getting started","title":"Getting started","text":"(Image: Plot)","category":"page"},{"location":"man/examples/example_spx/#Time-varying-transition-probabilites-modelling-stock-market","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"","category":"section"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"Stock market analysts often describes different periods as volatile or calm market conditions.  Each of these states of market are characterized by different dynamics of stock prices.  In following example we will see that the Markov Switching models are well suited to describe not only the regime characteristics but also what determines the chance of switching between them.","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"We will begin by loading the weekly data of S&P 500 and VIX volatility index. The data is downloaded from Yahoo finance and can be found in the github repo. S&P 500 is arguable the most important stock market index consisting of approximately 500 largest companies in the US. VIX is an option implied measure of expected volatility of S&P500 index. It is often referred to as the \"fear index\" as it tends to increase during periods of market turmoil. The dataset already contains columns with lagged variables and rate of returns.","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"using MarSwitching\nusing CSV\nusing DataFrames\nusing Plots\nusing Random\nusing Distributions\nusing StatsBase\nusing Statistics\n\ndf_spx_csv_path = joinpath(\n    dirname(pathof(MarSwitching)),\n    \"../docs/src/man/examples/my_assets/df_spx.csv\"\n)\ndf = CSV.read(df_spx_csv_path, DataFrame)","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"The model we are going to estimate might be challenging for the optimizing algorithm, thus we can help it by standardizing the variables. This is especially important for the models with time-varying transition probability matrix.","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"σ_spx = std(df.spx)\nσ_vix = std(df.vix)\nμ_spx = mean(df.spx)\nμ_vix = mean(df.vix)\n\ndf.spx = (df.spx .- μ_spx) ./ σ_spx\ndf.vix_lag = (df.vix_lag .- μ_vix) ./ σ_vix\ndf.spx_lag = (df.spx_lag .- μ_spx) ./ σ_spx","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"We want to inspect how the S&P500 returns behave under different regimes and how the probability of switching between them is determined. In order not to risk falling into local maxima we will estimate a univariate model with lags and a single exogenous variable (VIX) for TVTP parameters. Note, in order to have intercept in the TVTP parameters the user need to provide a column of singles. Unlike in the specification of regression, that is done with intercept argument. We will also use random search for expectation-maximization algorithm to find the best starting values that are possibly close to global maxima.","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"# estimating 2-regime model with TVTP and one switching variable\nRandom.seed!(123)\nmodel = MSModel(df.spx, 2,\n                exog_switching_vars = df.spx_lag,    \n                exog_tvtp = [ones(length(df.vix)) df.vix_lag],\n                random_search_em = 20)\n\nsummary_msm(model)  ","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"Markov Switching Model with 2 regimes\n=================================================================\n# of observations:         1709 AIC:                      4299.094\n# of estimated parameters:   10 BIC:                      4353.531\nError distribution:    Gaussian Instant. adj. R^2:          0.0058\nLoglikelihood:          -2139.5 Step-ahead adj. R^2:        0.0115\n-----------------------------------------------------------------\n------------------------------\nSummary of regime 1:\n------------------------------\nCoefficient  |  Estimate  |  Std. Error  |  z value  |  Pr(>|z|)\n-------------------------------------------------------------------\nβ_0          |     0.067  |       0.021  |    3.183  |     0.001  \nβ_1          |     -0.07  |        0.03  |   -2.328  |      0.02  \nσ            |     0.553  |       0.017  |   32.272  |    < 1e-3\n-------------------------------------------------------------------\nExpected regime duration: 13.12 periods\n-------------------------------------------------------------------\n------------------------------\nSummary of regime 2:\n------------------------------\nCoefficient  |  Estimate  |  Std. Error  |  z value  |  Pr(>|z|)\n-------------------------------------------------------------------\nβ_0          |    -0.115  |       0.065  |   -1.787  |     0.074  \nβ_1          |    -0.056  |       0.046  |   -1.232  |     0.218  \nσ            |     1.483  |       0.026  |   57.781  |    < 1e-3\n-------------------------------------------------------------------\nExpected regime duration: 378.89 periods\n-------------------------------------------------------------------\nTime-varying parameters: \n===================================================================\nSummary of term 1 (intercept) in TVTP equations:\n-------------------------------------------------------------------\nCoefficient  |  Estimate  |  Std. Error  |  z value  |  Pr(>|z|)\n-------------------------------------------------------------------\nδ_0 [1 -> 1] |     0.047  |        0.59  |    0.079  |     0.937\nδ_0 [2 -> 1] |     1.436  |       0.681  |     2.11  |     0.035\n-------------------------------------------------------------------\nSummary of term 2 (slope) in TVTP equations:\n-------------------------------------------------------------------\nCoefficient  |  Estimate  |  Std. Error  |  z value  |  Pr(>|z|)\n-------------------------------------------------------------------\nδ_1 [1 -> 1] |    -3.923  |        0.84  |   -4.669  |    < 1e-3\nδ_1 [2 -> 1] |     -3.65  |        1.22  |   -2.992  |     0.003\n-------------------------------------------------------------------","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"The estimated model has a following form:","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"Delta textSP500_t = \nbegincases\n    0067 - 007 times Delta textSP500_t-1 + epsilon_1t  epsilon_1 sim mathbbN(00553)  textfor  S_t = 1\n    -0115 - 0056 times Delta textSP500_t-1 + epsilon_2t  epsilon_2 sim mathbbN(01483)  textfor  S_t = 2\nendcases","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"With the following time-varying transition probability matrix:","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"P(S_t = 1  S_t-1 = 1)_t = dfracexp(0047 - 3923 times textVIX_t-1)textstyle exp(0047 - 3923 times textVIX_t-1) + 1","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"P(S_t = 2  S_t-1 = 1)_t = dfracexp(1436 - 365 times textVIX_t-1)textstyle exp(1436 - 365 times textVIX_t-1) + 1","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"The estimated model distinguish two market regimes. The first one may be described as calm market conditions with low volatility and a positive drift, or in other words, a bull market. This regime reacts negatively but with a small effect to the lagged returns of the index (here denoted as delta, with a slight abuse of standard notation). ","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"The second regime is characterized by a negative drift and a much higher volatility. This regime is often referred to as a bear market. The price dynamics in this regime behave more like random walk with a negative drift, as the lagged variable have no significant effect on the current price change.","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"What can the TVTP parameter tell us? Since the model uses logit function in order to model probabilities reasonably, it is complicated to interpret them in a natural way (as is the case for logistic regression). However, we can see that the chance of switching from the second regime to the first one is significantly decreasing with the VIX index, thus the VIX is triggering the bear market. The same in the opposite direction.","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"We can now inspect the smoothed probabilities of each regime:","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"plot(smoothed_probs(model)[end-300:end,:],\n                    label     = [\"Calm market conditions\" \"Volatile market conditions\"],\n                    title     = \"Regime probabilities\", \n                    linewidth = 2,\n                    legend = :bottomleft)","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"(Image: Plot)","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"We can see by the last 300 weeks, that the regimes are switching quite frequently. However, there are also around 20-30 week-long periods of a single dominant regime. What might look promising for an investor (and less so for trader) is that the calm market conditions are more frequent than the volatile ones.","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"plot(expected_duration(model)[expected_duration(model)[:,2] .< 100,:],\n        label = [\"Calm market conditions\" \"Volatile market conditions\"],\n        title = \"Time-varying expected duration of regimes\") ","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"(Image: Plot)","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"Since the transition matrix is time-varying, its expected duration is as well. Similarly, the plot shows that predominantly, markets are expected to stay in the calm regime. This is despite the trimmed mean of expected duration shown in the model summary, which is skewed by the outliers. It is useful to plot the time series of expected duration, as the values can often reach extreme values due to logistic transformation (e.g. a 100% diagonal probability of transition implies an infinite expected duration).","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"Having already found a decent model for the data generating process of the stock market returns, we can also use it for risk management. Function generate_msm thanks to Julia's multi-threading, is able to work either with provided parameters of Markov Switching model or from already estimated one. We will use this function for Monte Carlo simulation that will allow us to calculate 1% Value-at-Risk (VaR) of S&P500 index. ","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"println(\"model VaR: \", round(quantile((generate_msm(model, 5000)[1] .+ μ_spx ) .* σ_spx, 0.01), digits=4))\nprintln(\"empirical VaR: \", round(quantile((df.spx .+ μ_spx) .* σ_spx, 0.01), digits=4))\nprintln(\"Distribution VaR: \", round(quantile(Normal(μ_spx, σ_spx), 0.01), digits=4))","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"model VaR: -0.0773\nempirical VaR: -0.0735\nDistribution VaR: -0.0503","category":"page"},{"location":"man/examples/example_spx/","page":"Time-varying transition probabilites - modelling stock market","title":"Time-varying transition probabilites - modelling stock market","text":"Although the model was not explicitly specified to explain the tail distribution, it manages to capture it quite well. The VaR calculated from the model is closer to the empirical one than the VaR calculated from the normal distribution (which to be fair is not the best distribution in finance but nonetheless is used commonly).","category":"page"},{"location":"#MarSwitching.jl:-Markov-Switching-dynamic-models-in-Julia","page":"Home","title":"MarSwitching.jl: Markov Switching dynamic models in Julia","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Build Status) (Image: Build status) (Image: codecov) (Image: License: MIT)","category":"page"},{"location":"","page":"Home","title":"Home","text":"MarSwitching.jl is a package for estimating Markov switching dynamic models (also called regime switching) for Julia. This is a class of models with time-varying coefficients depending on an unobservable state/regime that follows a Markov process. The package provides tools for estimation, inference and simulation of the models. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"Author: Mateusz Dadej, m.dadej at unibs.it","category":"page"},{"location":"","page":"Home","title":"Home","text":"info: Star it on GitHub!\nIf you have found this package useful, please consider starring it on GitHub.<script async defer src=\"https://buttons.github.io/buttons.js\"></script>\n\n<a class=\"github-button\" \nhref=\"https://github.com/m-dadej/MarSwitching.jl\" \ndata-icon=\"octicon-star\" \ndata-size=\"large\" \ndata-show-count=\"true\" \naria-label=\"Star alan-turing-institute/MLJ.jl on GitHub\">\nStar</a>","category":"page"},{"location":"","page":"Home","title":"Home","text":"citation: I encourage to cite the working paper of package when using it in your research. You can use the following BibTeX entry from the CITATION.bib file:","category":"page"},{"location":"","page":"Home","title":"Home","text":"@article{DadejMarswitching2019,\n  title       = {MarSwitching.jl: A Julia package for Markov Switching Dynamic Models},\n  author      = {Mateusz Dadej},\n  institution = {University of Brescia},\n  journal     = {Available at SSRN 4638279},\n  year        = {2023},\n  doi         = {https://dx.doi.org/10.2139/ssrn.4638279},\n  url         = {https://ssrn.com/abstract=4638279}\n}","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"MarSwitching is in general registry. To install simply enter ] in the Julia's REPL and use following command:","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add MarSwitching","category":"page"},{"location":"","page":"Home","title":"Home","text":"Assuming that you already have at least Julia 1.6 (stable version) installed.","category":"page"},{"location":"#Functionality","page":"Home","title":"Functionality","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Currently available:\nMarkov switching model with k regimes and combinations of switching/non-switching:\nintercept\nvariance\nexogenous variables\nmodel with time-varying transition probabilities (TVTP) (à la Filardo 1994) \nFiltered probabilities\nSmoothed probabilities (Kim, 1994)\nSummary statistics of coefficients\ninstantaneous and one step ahead predict()\nExpected regime duration\nSimulation of data both from estimated model and from given parameters\nvariable and number of states selection (with random and grid search)\nPlanned functionality:\nother error distributions (student-t, GED, etc.)\nMarkov Switching GARCH model\nMarkov Switching VAR model\nMarkov Switching model with lagged states. E.g. y_t = mu_S_t + phi(y_t-1 - mu_S_t-1)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Future development is closely related to the package's popularity.","category":"page"},{"location":"#Performance-comparison","page":"Home","title":"Performance comparison","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"MarSwitching.jl is the fastest open source implementation of the model. The benchmark was done on artificially generated data with 400 observations, from the model with 3 regimes, 1 switching and 1 non switching exogenous variable. Table below shows mean absolute error of estimated parameters with respect to the actual parameters from generate_msm() function.","category":"page"},{"location":"","page":"Home","title":"Home","text":" MarSwitching.jl statsmodels MSwM MS_Regress\nimplementation Julia Python/Cython R MATLAB/MEX/C++\nerror:    \nmu 0.0363 0.0363 0.036 0.0367\nbeta_s 0.0237 0.0237 0.0245 0.0241\nbeta_ns 0.0150 0.01508 0.0211 0.0157\nsigma 0.0083 0.0083 0.0108 0.0084\np 0.0138 0.0138 0.0157 0.0139\n    \nruntime (s) 0.471 3.162 3.867 19.959\nrelative 1 6.713 8.21 42.376","category":"page"},{"location":"","page":"Home","title":"Home","text":"MarSwitching.jl is 6,7 times faster than statsmodels implementation in Python/Cython, 8,2 times faster than MSwM in R and 42 times faster than MS_Regress in MATLAB/MEX, although MATLAB package is also calculating standard errors during function call. Every implementation had virtually the same error of estimated parameters.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Software versions: MarSwitching.jl v0.2.2, Statsmodels v0.14.1, MSwM v1.5, MS_Regress v1.11. The programming languages versions were: Julia v1.10.1, Python v3.12.2, R v4.2.1 and MATLAB vR2024a. Calculations were run on: Windows 11 x64 Intel(R) Core(TM) i7-9850H CPU @ 2.60GHz, 2592 Mhz, 6 Core(s), 12 Logical Processor(s).","category":"page"},{"location":"","page":"Home","title":"Home","text":"Code of the benchmarks can be found in benchmark folder.","category":"page"},{"location":"#Contributing","page":"Home","title":"Contributing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"PRs with fixed bugs or new methods are highly appreciated. Especially the ones described in functionality section.\nOpen an issue if the PR changes current code substanitally.\nIf unsure, check the ColPrac guide on collaborative practices for Packages.","category":"page"},{"location":"#Markov-regime-switching-model-in-a-nutshell","page":"Home","title":"Markov regime switching model in a nutshell","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The Markov switching models are a class of models that allow for the parameters to change over time, depending on the unobservable state like economic recession, high volatility on financial markets or epidemiologic outbreak. The state follows Markov process with a given probability transition matrix for each of k states:","category":"page"},{"location":"","page":"Home","title":"Home","text":"beginequation*\nP(S_t = i  S_t-1 = j) = \nbeginpmatrix\np_11  p_12  cdots  p_1k \np_21  p_22  cdots  p_2k \nvdots   vdots   ddots  vdots  \np_k1  p_k2  cdots  p_kk \nendpmatrix\nendequation*","category":"page"},{"location":"","page":"Home","title":"Home","text":"Satisfying standard Markovian properties. The general model is defined as follows:","category":"page"},{"location":"","page":"Home","title":"Home","text":"beginalign*\nmathbfy_t = mathbfmu_S + mathbfbeta_S mathbfX_t + mathbfgammamathbfZ_t + mathbfepsilon_t  mathbfepsilon sim f(0mathcalSigma_s)\nendalign*","category":"page"},{"location":"","page":"Home","title":"Home","text":"Where mathbfy_t is vector of dependent variables, mathbfmu_s and mathbfbeta_s are model parameters dependent on the state S_t, mathbfgamma is a vector of parameters for exogenous variables. The error is distributed according to some distribution f with state dependent covariance matrix mathcalSigma_s. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"Because of the unobserved nature of the state, the model is estimated by maximum likelihood. The likelihood function is calculated using the method described in Hamilton, 1989.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The package also provide time-varying transition probabilities (TVTP) (Filardo, 1994) which allows for the transition matrix to change over time. Each transition probability has a following form:","category":"page"},{"location":"","page":"Home","title":"Home","text":"p_ijt = dfracexp(delta_ijmathbfZ_t)textstyle sum_j=1 exp(delta_ijmathbfZ_t)","category":"page"}]
}
